/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../app/video/video.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './video.component.css.shim.ngstyle';
import * as import9 from '@angular/core/src/linker/query_list';
import * as import10 from '../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import12 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from '@angular/core/src/change_detection/change_detection_util';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import16 from '@angular/forms/src/directives/control_value_accessor';
import * as import17 from '@angular/forms/src/directives/ng_model';
import * as import18 from '@angular/forms/src/directives/ng_control';
import * as import19 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_VideoComponent {
  /*private*/ _eventHandler:Function;
  context:import0.VideoComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.VideoComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_VideoComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_VideoComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.VideoComponent>;
  _VideoComponent_0_3:Wrapper_VideoComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_VideoComponent_Host0,renderType_VideoComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'app-video',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_VideoComponent0(this.viewUtils,this,0,this._el_0);
    this._VideoComponent_0_3 = new Wrapper_VideoComponent();
    this.compView_0.create(this._VideoComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._VideoComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.VideoComponent) && (0 === requestNodeIndex))) { return this._VideoComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._VideoComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._VideoComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const VideoComponentNgFactory:import7.ComponentFactory<import0.VideoComponent> = new import7.ComponentFactory<import0.VideoComponent>('app-video',View_VideoComponent_Host0,import0.VideoComponent);
const styles_VideoComponent:any[] = [import8.styles];
var renderType_VideoComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_VideoComponent,{});
export class View_VideoComponent0 extends import1.AppView<import0.VideoComponent> {
  _viewQuery_video_0:import9.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _SelectControlValueAccessor_4_3:import10.Wrapper_SelectControlValueAccessor;
  _NG_VALUE_ACCESSOR_4_4:any[];
  _NgModel_4_5:import11.Wrapper_NgModel;
  _NgControl_4_6:any;
  _NgControlStatus_4_7:import12.Wrapper_NgControlStatus;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  /*private*/ _expr_15:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_VideoComponent0,renderType_VideoComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_15 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_video_0 = new import9.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'video',new import3.InlineArray8(6,'autoplay','','height','480','width','640'),(null as any));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,parentRenderNode,'br',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,parentRenderNode,'select',new import3.InlineArray2(2,'name','videoSelect'),(null as any));
    this._SelectControlValueAccessor_4_3 = new import10.Wrapper_SelectControlValueAccessor(this.renderer,new import14.ElementRef(this._el_4));
    this._NG_VALUE_ACCESSOR_4_4 = [this._SelectControlValueAccessor_4_3.context];
    this._NgModel_4_5 = new import11.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_4_4);
    this._NgControl_4_6 = this._NgModel_4_5.context;
    this._NgControlStatus_4_7 = new import12.Wrapper_NgControlStatus(this._NgControl_4_6);
    this._text_5 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray2(2,'name','bottone'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray8(6,'ngModelChange',(null as any),'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_4));
    this._NgModel_4_5.subscribe(this,this.eventHandler(this.handleEvent_4),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_6));
    this._viewQuery_video_0.reset([new import14.ElementRef(this._el_0)]);
    this.context.video = this._viewQuery_video_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.SelectControlValueAccessor) && (4 === requestNodeIndex))) { return this._SelectControlValueAccessor_4_3.context; }
    if (((token === import16.NG_VALUE_ACCESSOR) && (4 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_4_4; }
    if (((token === import17.NgModel) && (4 === requestNodeIndex))) { return this._NgModel_4_5.context; }
    if (((token === import18.NgControl) && (4 === requestNodeIndex))) { return this._NgControl_4_6; }
    if (((token === import19.NgControlStatus) && (4 === requestNodeIndex))) { return this._NgControlStatus_4_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SelectControlValueAccessor_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_4_1_0:any = 'videoSelect';
    this._NgModel_4_5.check_name(currVal_4_1_0,throwOnChange,false);
    const currVal_4_1_1:any = this.context.selectedDevice;
    this._NgModel_4_5.check_model(currVal_4_1_1,throwOnChange,false);
    this._NgModel_4_5.ngDoCheck(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_7.ngDoCheck(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_7.checkHost(this,this,this._el_4,throwOnChange);
    const currVal_15:any = import3.inlineInterpolate(1,'',this.context.bottone,'');
    if (import3.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setText(this._text_7,currVal_15);
      this._expr_15 = currVal_15;
    }
  }
  destroyInternal():void {
    this._NgModel_4_5.ngOnDestroy();
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._SelectControlValueAccessor_4_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>this.context.selectSource()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}